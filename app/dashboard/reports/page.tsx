"use client"
import React, { useState, useEffect } from 'react';
import { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';
import styles from './Reports.module.css';

// Dummy data for reports
const dummyReports = [
  { id: 1, name: "Monthly Patient Visits", description: "Overview of patient visits for the current month" },
  { id: 2, name: "Treatment Success Rate", description: "Analysis of treatment outcomes and success rates" },
  { id: 3, name: "Revenue by Department", description: "Breakdown of revenue generated by each department" },
  { id: 4, name: "Staff Performance", description: "Evaluation of dentist and staff performance metrics" },
  { id: 5, name: "Patient Satisfaction", description: "Summary of patient feedback and satisfaction scores" },
];

// Dummy data for charts
const dummyChartData = [
  { name: 'Jan', visits: 4000, revenue: 2400 },
  { name: 'Feb', visits: 3000, revenue: 1398 },
  { name: 'Mar', visits: 2000, revenue: 9800 },
  { name: 'Apr', visits: 2780, revenue: 3908 },
  { name: 'May', visits: 1890, revenue: 4800 },
  { name: 'Jun', visits: 2390, revenue: 3800 },
];

const Reports = () => {
  const [reports, setReports] = useState([]);
  const [selectedReport, setSelectedReport] = useState(null);
  const [generatingReport, setGeneratingReport] = useState(false);

  useEffect(() => {
    // In a real application, you would fetch this data from an API
    setReports(dummyReports);
  }, []);

  const handleReportSelect = (report) => {
    setSelectedReport(report);
  };

  const handleGenerateReport = () => {
    if (selectedReport) {
      setGeneratingReport(true);
      // Simulate report generation
      setTimeout(() => {
        setGeneratingReport(false);
        alert(`Report "${selectedReport.name}" has been generated!`);
      }, 2000);
    }
  };

  return (
    <div className={styles.reports}>
      <h1>Reports</h1>
      <div className={styles.reportsContainer}>
        <div className={styles.reportsList}>
          <h2>Available Reports</h2>
          {reports.map((report) => (
            <div
              key={report.id}
              className={`${styles.reportItem} ${selectedReport && selectedReport.id === report.id ? styles.selected : ''}`}
              onClick={() => handleReportSelect(report)}
            >
              <h3>{report.name}</h3>
              <p>{report.description}</p>
            </div>
          ))}
        </div>
        <div className={styles.reportDetails}>
          {selectedReport ? (
            <>
              <h2>{selectedReport.name}</h2>
              <p>{selectedReport.description}</p>
              <button
                className={styles.generateButton}
                onClick={handleGenerateReport}
                disabled={generatingReport}
              >
                {generatingReport ? 'Generating...' : 'Generate Report'}
              </button>
              <div className={styles.chartContainer}>
                <h3>Sample Chart</h3>
                <ResponsiveContainer width="100%" height={300}>
                  <BarChart data={dummyChartData}>
                    <CartesianGrid strokeDasharray="3 3" />
                    <XAxis dataKey="name" />
                    <YAxis yAxisId="left" orientation="left" stroke="#8884d8" />
                    <YAxis yAxisId="right" orientation="right" stroke="#82ca9d" />
                    <Tooltip />
                    <Legend />
                    <Bar yAxisId="left" dataKey="visits" fill="#8884d8" name="Visits" />
                    <Bar yAxisId="right" dataKey="revenue" fill="#82ca9d" name="Revenue" />
                  </BarChart>
                </ResponsiveContainer>
              </div>
            </>
          ) : (
            <p>Select a report to view details and generate.</p>
          )}
        </div>
      </div>
    </div>
  );
};

export default Reports;